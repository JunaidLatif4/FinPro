[{"/home/yamin/Downloads/work/serverless-stack-client/src/App.js":"1","/home/yamin/Downloads/work/serverless-stack-client/src/service.js":"2","/home/yamin/Downloads/work/serverless-stack-client/src/components/MenuBar.js":"3","/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/Sales.js":"4","/home/yamin/Downloads/work/serverless-stack-client/src/views/Reports/Reports.js":"5","/home/yamin/Downloads/work/serverless-stack-client/src/views/Pricing/Pricing.js":"6","/home/yamin/Downloads/work/serverless-stack-client/src/utils/utils.js":"7","/home/yamin/Downloads/work/serverless-stack-client/src/views/Revenue/RevenueInputs.js":"8","/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/MarketingInputs.js":"9","/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/SalesInputs.js":"10","/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/ExpenseInputs.js":"11","/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/ContractorExpense.js":"12","/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/ContractorExpense.js":"13","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/SignUp/SignUp.js":"14","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/Login/Login.js":"15","/home/yamin/Downloads/work/serverless-stack-client/src/context/context.js":"16","/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/Marketing.js":"17","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/Confirm/Confirm.js":"18","/home/yamin/Downloads/work/serverless-stack-client/src/views/Revenue/ExpenseInputs.js":"19","/home/yamin/Downloads/work/serverless-stack-client/src/views/RandD/RandDInputs.js":"20","/home/yamin/Downloads/work/serverless-stack-client/src/context/payment-service.js":"21","/home/yamin/Downloads/work/serverless-stack-client/src/context/revenue-service.js":"22","/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/ContractorExpense.js":"23","/home/yamin/Downloads/work/serverless-stack-client/src/routes.js":"24","/home/yamin/Downloads/work/serverless-stack-client/src/RoundedBars.js":"25","/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/GandA.js":"26","/home/yamin/Downloads/work/serverless-stack-client/src/context/fetch-service.js":"27","/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/ExpenseInputs.js":"28","/home/yamin/Downloads/work/serverless-stack-client/src/context/subscription-service.js":"29","/home/yamin/Downloads/work/serverless-stack-client/src/context/input-service.js":"30"},{"size":661,"mtime":1609173384978,"results":"31","hashOfConfig":"32"},{"size":601,"mtime":1609173384982,"results":"33","hashOfConfig":"32"},{"size":4906,"mtime":1611769471285,"results":"34","hashOfConfig":"32"},{"size":13238,"mtime":1610209332922,"results":"35","hashOfConfig":"32"},{"size":12792,"mtime":1610211315770,"results":"36","hashOfConfig":"32"},{"size":8178,"mtime":1610209279146,"results":"37","hashOfConfig":"32"},{"size":27263,"mtime":1610607676646,"results":"38","hashOfConfig":"32"},{"size":8842,"mtime":1610604845237,"results":"39","hashOfConfig":"32"},{"size":9380,"mtime":1610024397920,"results":"40","hashOfConfig":"32"},{"size":9209,"mtime":1610021805713,"results":"41","hashOfConfig":"32"},{"size":16517,"mtime":1609221172386,"results":"42","hashOfConfig":"32"},{"size":6865,"mtime":1610029790515,"results":"43","hashOfConfig":"32"},{"size":6864,"mtime":1609173384986,"results":"44","hashOfConfig":"32"},{"size":5046,"mtime":1611812312835,"results":"45","hashOfConfig":"32"},{"size":4939,"mtime":1611812370151,"results":"46","hashOfConfig":"32"},{"size":17255,"mtime":1611991837277,"results":"47","hashOfConfig":"32"},{"size":14084,"mtime":1610209261566,"results":"48","hashOfConfig":"32"},{"size":3751,"mtime":1611770599613,"results":"49","hashOfConfig":"32"},{"size":9926,"mtime":1609335996209,"results":"50","hashOfConfig":"32"},{"size":9218,"mtime":1610024369572,"results":"51","hashOfConfig":"32"},{"size":511,"mtime":1611673718921,"results":"52","hashOfConfig":"32"},{"size":2304,"mtime":1611673718917,"results":"53","hashOfConfig":"32"},{"size":6931,"mtime":1609220550353,"results":"54","hashOfConfig":"32"},{"size":1924,"mtime":1611737225976,"results":"55","hashOfConfig":"32"},{"size":5304,"mtime":1609173384978,"results":"56","hashOfConfig":"32"},{"size":13299,"mtime":1610209253126,"results":"57","hashOfConfig":"32"},{"size":1392,"mtime":1611673719029,"results":"58","hashOfConfig":"32"},{"size":13466,"mtime":1609221772057,"results":"59","hashOfConfig":"32"},{"size":784,"mtime":1610196595721,"results":"60","hashOfConfig":"32"},{"size":1544,"mtime":1611673719029,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"czythg",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yamin/Downloads/work/serverless-stack-client/src/App.js",[],["132","133"],"/home/yamin/Downloads/work/serverless-stack-client/src/service.js",[],["134","135"],"/home/yamin/Downloads/work/serverless-stack-client/src/components/MenuBar.js",["136"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/Sales.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Reports/Reports.js",["137"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Pricing/Pricing.js",["138","139","140","141","142","143"],"import React from 'react';\nimport { getUserPaymentMethods, getUserPurchasing } from '../../context/fetch-service';\nimport { AuthContext } from '../../context/context';\nimport { useHistory } from 'react-router-dom';\nimport { subscription, cancelSubscription } from '../../context/subscription-service';\nimport { set } from 'numeral';\nconst planlist = ['SaaS business Model', 'Input Variables', 'Charts', 'Reports', '30-days free trial'];\n\nfunction Pricing() {\n\tconst history = useHistory();\n\tconst {\n\t\tstate: { user, billingDetails, purchasing, isAuthenticated },\n\t\tdispatch,\n\t} = React.useContext(AuthContext);\n\n\tconst userSub = purchasing && purchasing.length > 0 ? purchasing.filter((sub) => sub.status === 'active') : [];\n\n\tconst [alertErrOpen, setAlertErrOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [loaderFor, setLoaderFor] = React.useState('');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [open, setOpen] = React.useState(false);\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (!isAuthenticated) {\n\t\t\thistory.push('/login');\n\t\t}\n\t\tasync function fetchRevenue() {\n\t\t\tlet billings = await getUserPaymentMethods();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_BILLING',\n\t\t\t\tpayload: billings,\n\t\t\t});\n\t\t\tlet purchasing = await getUserPurchasing();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_PURCHASING',\n\t\t\t\tpayload: purchasing,\n\t\t\t});\n\t\t}\n\t\tfetchRevenue();\n\t}, [isAuthenticated, history, dispatch]);\n\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetAlertErrOpen('');\n\t\tsetMsg('');\n\t\tsetErr('');\n\t};\n\n\tconst giveAlert = () => {\n\t\tsetAlertClass('show');\n\t\tsetAlertErrOpen('Please add payment details first');\n\t};\n\n\tconst addSubscription = async (e, startTrial) => {\n\t\te.preventDefault();\n\t\tsetLoaderFor(startTrial ? 'trial' : 'sub');\n\t\tif (!startTrial && billingDetails.length === 0) {\n\t\t\tgiveAlert();\n\t\t\tsetLoaderFor('');\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tlet sub = await subscription(startTrial);\n\t\t\tif (sub.status === 200 || sub.status === 201) {\n\t\t\t\tlet billings = await getUserPaymentMethods();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_BILLING',\n\t\t\t\t\tpayload: billings,\n\t\t\t\t});\n\t\t\t\tlet purchasing = await getUserPurchasing();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_PURCHASING',\n\t\t\t\t\tpayload: purchasing,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(sub.data.message);\n\t\t\t\tsetErr('');\n\t\t\t\tsetLoader(false);\n\t\t\t\tsetLoaderFor('');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(err);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tif (err.response.data.error && err.response.data.error.raw) {\n\t\t\t\t\t\tsetErr(err.response.data.error.raw.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t\t}\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t\tsetLoaderFor('');\n\t\t}\n\t};\n\tconst cancelUserSubscription = async (e) => {\n\t\te.preventDefault();\n\t\tsetLoader(true);\n\t\tsetLoaderFor('cancel');\n\t\ttry {\n\t\t\tlet sub = await cancelSubscription();\n\t\t\tif (sub.status === 200 || sub.status === 201) {\n\t\t\t\tlet billings = await getUserPaymentMethods();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_BILLING',\n\t\t\t\t\tpayload: billings,\n\t\t\t\t});\n\t\t\t\tlet purchasing = await getUserPurchasing();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_PURCHASING',\n\t\t\t\t\tpayload: purchasing,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(sub.data.message);\n\t\t\t\tsetErr('');\n\t\t\t\tsetLoader(false);\n\t\t\t\tsetLoaderFor('');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(err);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t\tsetLoaderFor('');\n\t\t}\n\t};\n\treturn (\n\t\t<div className='container'>\n\t\t\t{alertErrOpen && (\n\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t<strong>{alertErrOpen}</strong>\n\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{msg && (\n\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{err && (\n\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-lg-12'>\n\t\t\t\t\t<h1 className='page-headings text-center'>Plan & Pricing</h1>\n\n\t\t\t\t\t<div className='mt-2 mb-2'></div>\n\n\t\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t<div className='plan-card-heading'>\n\t\t\t\t\t\t\t\t\t<h4>INTRO PLAN</h4>\n\t\t\t\t\t\t\t\t\t<h1 className='plan-price'>\n\t\t\t\t\t\t\t\t\t\t<span>$</span>19\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<span>/month</span>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='items-check-list'>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{planlist.map((list, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>{list}</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='list-checks'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-check-circle'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='mt-2'></div>\n\t\t\t\t\t\t\t\t<div className='mb-4 text-center'>\n\t\t\t\t\t\t\t\t\t{userSub && userSub.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={cancelUserSubscription} className='btn btn-custom btn-padd'>\n\t\t\t\t\t\t\t\t\t\t\t\t{loaderFor === 'cancel' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{userSub[0].planType === 'trial' && (\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={addSubscription} className='btn btn-custom btn-padd'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loaderFor === 'purchase' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tPurchase\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={(e) => addSubscription(e)} className='btn btn-custom btn-padd'>\n\t\t\t\t\t\t\t\t\t\t\t\t{loaderFor === 'sub' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{(loaderFor === '' || loaderFor === 'trial') && 'Subscribe'}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={(e) => addSubscription(e, 'startTrial')} className='btn btn-custom btn-padd'>\n\t\t\t\t\t\t\t\t\t\t\t\t{loaderFor === 'trial' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{(loaderFor === '' || loaderFor === 'sub') && 'Start Trial'}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Pricing;\n","/home/yamin/Downloads/work/serverless-stack-client/src/utils/utils.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Revenue/RevenueInputs.js",["144"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addPlan, deletePlan, updatePlan } from '../../context/revenue-service';\nimport { AuthContext } from '../../context/context';\nimport { getRevenue } from '../../context/fetch-service';\nimport { colors } from '../../context/colors';\nimport moment from 'moment';\n\nfunction RevenueInputs({ revenues, setMsg, setErr, setAlertClass, chartValue }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst [revenueForm, setRevenueForm] = React.useState({\n\t\tplan: '',\n\t\tprice: '',\n\t\tpurchasers: '',\n\t\ttype: 'Yearly',\n\t\tdate: '',\n\t});\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t\tsetEdit(false);\n\t\tsetRevenueForm({\n\t\t\tplan: '',\n\t\t\tprice: '',\n\t\t\tpurchasers: '',\n\t\t\ttype: 'Yearly',\n\t\t\tdate: '',\n\t\t});\n\t};\n\n\tconst handleRevenueChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetRevenueForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updatePlan({ revenueId: revenueForm.revenueId, revenueInputId: revenueForm.revenueInputId, data: revenueForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t\tdispatch({ type: 'VIEW_DATA', payload: chartValue });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trevenueForm.color = colors[Math.floor(Math.random() * colors.length - 1)];\n\t\t\t\tlet add = await addPlan(revenueForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t\tdispatch({ type: 'VIEW_DATA', payload: chartValue });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetRevenueForm({\n\t\t\tplan: '',\n\t\t\tprice: '',\n\t\t\tpurchasers: '',\n\t\t\ttype: 'Yearly',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deletePlan(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\tpayload: revenues,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t\tdispatch({ type: 'VIEW_DATA', payload: chartValue });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (revenueId, revenueInputId, rev) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetRevenueForm({\n\t\t\tplan: rev.plan,\n\t\t\tprice: rev.price,\n\t\t\tpurchasers: rev.purchasers,\n\t\t\ttype: rev.type,\n\t\t\tdate: rev.date ? moment(rev.date).format('YYYY-MM-DD') : new Date(),\n\t\t\trevenueId,\n\t\t\trevenueInputId,\n\t\t});\n\t};\n\treturn (\n\t\t<div className='card'>\n\t\t\t<div>\n\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope='col'>Plan Name</th>\n\t\t\t\t\t\t\t\t<th scope='col'>Price</th>\n\t\t\t\t\t\t\t\t<th scope='col'>purchasers</th>\n\t\t\t\t\t\t\t\t<th scope='col'>Annually vs Monthly</th>\n\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t<i title='Add Plan' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Plan' : 'Add Plan'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='plan' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPlan\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='plan' value={revenueForm.plan} onChange={handleRevenueChange} className='form-control' id='plan' placeholder='Plan' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='price' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='price' value={revenueForm.price} onChange={handleRevenueChange} className='form-control' id='price' placeholder='Price' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='purchasers' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPurchasers\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='purchasers' value={revenueForm.purchasers} onChange={handleRevenueChange} className='form-control' id='purchasers' placeholder='Purchasers' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='type' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tType\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select name='type' onChange={handleRevenueChange} className='form-control' id='type' placeholder='Password' required>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option selected={revenueForm.type === 'Yearly'} value='Yearly'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYearly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option selected={revenueForm.type === 'Quarter'} value='Quarter'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tQuarter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option selected={revenueForm.type === 'Monthly'} value='Monthly'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMonthly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={revenueForm.date} onChange={handleRevenueChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Plan' : 'Add Plan')}\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{revenues &&\n\t\t\t\t\t\t\t\trevenues.revenuInputs &&\n\t\t\t\t\t\t\t\trevenues.revenuInputs.length > 0 &&\n\t\t\t\t\t\t\t\trevenues.revenuInputs.map((rev, id) => (\n\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t<td>{rev.plan}</td>\n\t\t\t\t\t\t\t\t\t\t<td>${rev.price}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{rev.purchasers}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{rev.type}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditPlan(revenues._id, rev._id, rev)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeletePlan({ revenueId: revenues._id, revenueInputId: rev._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RevenueInputs;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/MarketingInputs.js",["145"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/SalesInputs.js",["146"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addInputs, deleteInputs, updateInputs } from '../../context/input-service';\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { getMonthName, Months } from '../../utils/utils';\nimport moment from 'moment';\n\nimport ContractExpense from './ContractorExpense';\n\nfunction SalesInputs({ sales, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst [salesInputForm, setSalesInputForm] = React.useState({\n\t\thire: '',\n\t\tstartDate: '',\n\t\tsalary: '',\n\t\ttaxes: '',\n\t\tcommissions: '',\n\t\ttitle: 'sales',\n\t});\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t\tsetEdit(false);\n\t\tsetSalesInputForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'sales',\n\t\t});\n\t};\n\n\tconst handleSalesChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetSalesInputForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputs({ inputMainId: sales._id, inputId: salesInputForm.inputId, data: salesInputForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputs(salesInputForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetSalesInputForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'sales',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeleteInput = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputs(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditInput = (input) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetSalesInputForm({\n\t\t\thire: input.hire,\n\t\t\tstartDate: moment(input.date).format('YYYY-MM-DD'),\n\t\t\tsalary: input.salary,\n\t\t\ttaxes: input.taxes,\n\t\t\tcommissions: input.commissions,\n\t\t\ttitle: 'sales',\n\t\t\tinputId: input._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Hire</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Start Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Salary</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Taxes</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Commissions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add Sales Inputs' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Sales' : 'Add Sales'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='hire' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHire\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='hire' value={salesInputForm.hire} onChange={handleSalesChange} className='form-control' id='hire' placeholder='Hire' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='startDate' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='startDate' value={salesInputForm.startDate} onChange={handleSalesChange} className='form-control' id='date' placeholder='Start Date' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='salary' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSalary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='salary' value={salesInputForm.salary} onChange={handleSalesChange} className='form-control' id='salary' placeholder='Salary' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='taxes' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='taxes' value={salesInputForm.taxes} onChange={handleSalesChange} className='form-control' id='taxes' placeholder='Taxes' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='commissions' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCommissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='commissions' value={salesInputForm.commissions} onChange={handleSalesChange} className='form-control' id='commissions' placeholder='Commissions' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Sales' : 'Add Sales')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{sales &&\n\t\t\t\t\t\t\t\t\tsales.inputs &&\n\t\t\t\t\t\t\t\t\tsales.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\tsales.inputs\n\t\t\t\t\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t\t\t\t\tif (new Date(a.startDate).getFullYear() !== new Date(b.startDate).getFullYear()) return new Date(a.startDate).getFullYear() - new Date(b.startDate).getFullYear();\n\t\t\t\t\t\t\t\t\t\t\treturn Months.indexOf(getMonthName(new Date(a.startDate).getMonth())) - Months.indexOf(getMonthName(new Date(b.startDate).getMonth()));\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.map((input, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{input.hire}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{getMonthName(new Date(input.startDate).getMonth() + 1) + ' ' + new Date(input.startDate).getFullYear()}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>${input.salary}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>%{input.taxes}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>${input.commissions}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditInput(input)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeleteInput({ inputMainId: sales._id, inputId: input._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6 col-xl-6'>{sales && sales._id && <ContractExpense salesId={sales._id} expenseInputs={sales.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default SalesInputs;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/ExpenseInputs.js",["147"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ gandaId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t\tsetEdit(false);\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: gandaId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: gandaId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: gandaId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdialogSetting.employee && (\n\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Tradeshows</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per quarter)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'tradeShows')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Online Marketing</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'onlineMarketing')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/ContractorExpense.js",["148"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/ContractorExpense.js",["149"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ gandaId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: gandaId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: gandaId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: gandaId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Contractor</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month) </th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'contractor')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/SignUp/SignUp.js",["150"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from '../../../context/axios';\nimport { Link } from 'react-router-dom';\nimport LOGO from '../../../assets/logo.png';\nimport BGImgs from '../../../assets/sign-in-cover.jpg';\nimport ConfirmRegistration from '../Confirm/Confirm';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [confirm, setConfrim] = React.useState(false);\n\n\tconst [passwordType, setPasswordType] = React.useState('password');\n\tconst [signupForm, setSignupForm] = React.useState({\n\t\temail: '',\n\t\tcpassword: '',\n\t});\n\n\tconst handleSignUp = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetSignupForm((prevState) => {\n\t\t\t// console.log(prevState);\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet signup = await axios.post('/signup', signupForm);\n\t\t\tif (signup.status === 200 || signup.status === 201) {\n\t\t\t\tsetErr('');\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetSignupForm({\n\t\t\t\t\temail: signupForm.email,\n\t\t\t\t\tpassword: '',\n\t\t\t\t});\n\t\t\t\tsetConfrim(true);\n\t\t\t\t// setMsg('Successfully Registered');\n\t\t\t\tsetLoader(false);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors && e.response.data.errors.length > 0) {\n\t\t\t\t\tconsole.log(e.response);\n\t\t\t\t\tsetErr(e.response.data.errors[0].msg);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t};\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t\tsetMsg('');\n\t};\n\n\tconst handlePwdType = () => {\n\t\tif (passwordType === 'password') {\n\t\t\tsetPasswordType('text');\n\t\t} else {\n\t\t\tsetPasswordType('password');\n\t\t}\n\t};\n\n\treturn confirm ? (\n\t\t<ConfirmRegistration email={signupForm.email} alertClass={alertClass} setAlertClass={setAlertClass} setMsg={setMsg} msg={msg} err={err} setErr={setErr} loader={loader} setLoader={setLoader} />\n\t) : (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row align-items-center justify-content-center'>\n\t\t\t\t<div className='col-12 col-md-5 col-lg-6 col-xl-4 px-lg-6 my-5'>\n\t\t\t\t\t<div className='Logo text-center'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={LOGO} alt='logo' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className='display-4 text-center mb-3'>Create a new Account</h2>\n\t\t\t\t\t{msg && (\n\t\t\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Email Address</label>\n\n\t\t\t\t\t\t\t<input type='email' name='email' value={signupForm.email} onChange={handleSignUp} className='form-control' required placeholder='name@address.com' />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Password</label>\n\n\t\t\t\t\t\t\t<div className='input-group input-group-merge'>\n\t\t\t\t\t\t\t\t<input className='form-control' name='password' value={signupForm.password} onChange={handleSignUp} required type={passwordType} placeholder='Enter your password' />\n\n\t\t\t\t\t\t\t\t<span onClick={handlePwdType} className='input-group-text'>\n\t\t\t\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className='fe fe-eye'></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button disabled={loader} style={{ margin: 0 }} className='btn btn-lg btn-block btn-custom mb-3'>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && 'Sign up for 30-days free trial'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t<small className='text-muted text-center'>\n\t\t\t\t\t\t\t\tAlready have an account? <Link to='/login'>Log in</Link>.\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block'>\n\t\t\t\t\t<div className='bg-cover vh-100 mt-n1 mr-n3' style={{ backgroundImage: `url(${BGImgs})` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SignUp;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/Login/Login.js",["151","152"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from '../../../context/axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context/context';\nimport { getUser, getUserPurchasing } from '../../../context/fetch-service';\nimport LOGO from '../../../assets/logo.png';\nimport BGImgs from '../../../assets/sign-in-cover.jpg';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction Login() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\tconst [passwordType, setPasswordType] = React.useState('password');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [loginForm, setLoginForm] = React.useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleLogin = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetLoginForm((prevState) => {\n\t\t\t// console.log(prevState);\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet login = await axios.post('/login', loginForm);\n\t\t\tif (login.status === 200 || login.status === 201) {\n\t\t\t\tlet user = await getUser(login.data.token);\n\t\t\t\tlet purchasing = await getUserPurchasing();\n\t\t\t\tif (purchasing) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_PURCHASING',\n\t\t\t\t\t\tpayload: purchasing,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (user) {\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetLoginForm({\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'LOGIN',\n\t\t\t\t\t\tpayload: { token: login.data.token, user: user },\n\t\t\t\t\t});\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else {\n\t\t\t\t\tif (e.response.data.message) {\n\t\t\t\t\t\tsetErr(e.response.data.message.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t};\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t};\n\n\tconst handlePwdType = () => {\n\t\tif (passwordType === 'password') {\n\t\t\tsetPasswordType('text');\n\t\t} else {\n\t\t\tsetPasswordType('password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row align-items-center justify-content-center'>\n\t\t\t\t<div className='col-12 col-md-5 col-lg-6 col-xl-4 px-lg-6 my-5'>\n\t\t\t\t\t<div className='Logo text-center'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={LOGO} alt='logo' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className='display-4 text-center mb-3'>Sign in</h2>\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Email Address</label>\n\n\t\t\t\t\t\t\t<input type='email' name='email' value={loginForm.email} onChange={handleLogin} className='form-control' required placeholder='name@address.com' />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<label className='form-label'>Password</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t<Link to='forgot-password' className='form-text small text-muted'>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='input-group input-group-merge'>\n\t\t\t\t\t\t\t\t<input className='form-control' type={passwordType} name='password' value={loginForm.password} onChange={handleLogin} required placeholder='Enter your password' />\n\n\t\t\t\t\t\t\t\t<span onClick={handlePwdType} className='input-group-text'>\n\t\t\t\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className='fe fe-eye'></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button disabled={loader} style={{ margin: 0 }} className='btn btn-lg btn-block btn-custom mb-3'>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && 'Sign in'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t\t<small className='text-muted text-center'>\n\t\t\t\t\t\t\t\tDon't have an account yet? <Link to='/signup'>Sign up</Link>.\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block'>\n\t\t\t\t\t<div className='bg-cover vh-100 mt-n1 mr-n3' style={{ backgroundImage: `url(${BGImgs})` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","/home/yamin/Downloads/work/serverless-stack-client/src/context/context.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/Marketing.js",["153"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { FormControl, InputBase, NativeSelect } from '@material-ui/core';\nimport { AuthContext } from '../../context/context';\nimport { useHistory } from 'react-router-dom';\n\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { getInputs } from '../../context/fetch-service';\n\nimport { getYear, getQuarter, getMonthDetails } from '../../utils/utils';\n\nimport autoTable from 'jspdf-autotable';\nimport { CSVLink } from 'react-csv';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nimport MarketingInputs from './MarketingInputs';\nimport ExpenseInputs from './ExpenseInputs';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n\troot: {\n\t\t'label + &': {\n\t\t\tmarginTop: theme.spacing(3),\n\t\t},\n\t},\n\tinput: {\n\t\tborderRadius: 4,\n\t\tposition: 'relative',\n\t\tbackgroundColor: '#f8f9fa',\n\t\t// border: '1px solid #ced4da',\n\t\tfontSize: 16,\n\t\tpadding: '10px 26px 10px 12px',\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\n\t\t// Use the system font instead of the default Roboto font.\n\t\tfontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n\t\t'&:focus': {\n\t\t\tborderRadius: 4,\n\t\t\tborderColor: '#80bdff',\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\t\t},\n\t},\n}))(InputBase);\n\nfunction Marketing() {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst {\n\t\tstate: { purchasing, inputs, data, isAuthenticated },\n\t\tdispatch,\n\t} = React.useContext(AuthContext);\n\n\tconst marketing = inputs.filter((i) => i.title === 'marketing')[0];\n\n\tconst userSub = purchasing && purchasing.length > 0 ? purchasing.filter((sub) => sub.status === 'active') : [];\n\n\tconst [chartValue, setChartValue] = React.useState('year');\n\tconst handleChange = (event) => {\n\t\tsetChartValue(event.target.value);\n\t};\n\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [alertClass, setAlertClass] = React.useState(userSub && userSub.length > 0 ? '' : 'show');\n\n\tconst [csvData, setCsvData] = React.useState('');\n\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t\tsetMsg('');\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (!isAuthenticated) {\n\t\t\thistory.push('/login');\n\t\t}\n\t\tasync function fetchRevenue() {\n\t\t\tlet inputs = await getInputs();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\tpayload: inputs,\n\t\t\t});\n\t\t}\n\t\tfetchRevenue();\n\t}, [isAuthenticated, history, dispatch]);\n\n\tconst generatePdf = () => {\n\t\tconst doc = new jsPDF();\n\t\tautoTable(doc, { html: '#marketing-table', startY: 20 });\n\t\tconst date = Date().split(' ');\n\t\t// we use a date string to generate our filename.\n\t\tconst dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\n\t\t// ticket title. and margin-top + margin-left\n\t\tdoc.text('Next Five Year Data', 14, 15);\n\t\t// we define the name of our PDF file.\n\t\tdoc.save(`report_${dateStr}.pdf`);\n\t};\n\n\tconst generateCSV = () => {\n\t\tif (marketing && marketing.inputs && marketing.inputs.length > 0) {\n\t\t\tlet str = '';\n\t\t\tif (chartValue === 'year') {\n\t\t\t\tstr +=\n\t\t\t\t\t'Year ,' +\n\t\t\t\t\tgetYear(marketing.inputs)\n\t\t\t\t\t\t.headings.map((year, id) => new Date(year.startDate).getFullYear())\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Headingcount ,' +\n\t\t\t\t\tgetYear(marketing.inputs)\n\t\t\t\t\t\t.headings.map((year, id) => year.count)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Salaries ,' +\n\t\t\t\t\tObject.values(getYear(marketing.inputs).salaries)\n\t\t\t\t\t\t.map((salary) => salary)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Taxes ,' +\n\t\t\t\t\tObject.values(getYear(marketing.inputs).taxes)\n\t\t\t\t\t\t.map((tax) => tax)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Commissions ,' +\n\t\t\t\t\tObject.values(getYear(marketing.inputs).commissions)\n\t\t\t\t\t\t.map((com) => com)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Total Payroll ,' +\n\t\t\t\t\tObject.values(getYear(marketing.inputs).total)\n\t\t\t\t\t\t.map((tot) => tot)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t} else if (chartValue === 'quarter') {\n\t\t\t\tstr +=\n\t\t\t\t\t'Quarter ,' +\n\t\t\t\t\tgetQuarter(marketing.inputs)\n\t\t\t\t\t\t.headings.map((quarter, id) => quarter.quarter)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Headingcount ,' +\n\t\t\t\t\tgetQuarter(marketing.inputs)\n\t\t\t\t\t\t.headings.map((year, id) => year.count)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Salaries ,' +\n\t\t\t\t\tObject.values(getQuarter(marketing.inputs).salaries)\n\t\t\t\t\t\t.map((salary) => salary)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Taxes ,' +\n\t\t\t\t\tObject.values(getQuarter(marketing.inputs).taxes)\n\t\t\t\t\t\t.map((tax) => tax)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Commissions ,' +\n\t\t\t\t\tObject.values(getQuarter(marketing.inputs).commissions)\n\t\t\t\t\t\t.map((com) => com)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Total Payroll ,' +\n\t\t\t\t\tObject.values(getQuarter(marketing.inputs).total)\n\t\t\t\t\t\t.map((tot) => tot)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t} else if (chartValue === 'month') {\n\t\t\t\tstr +=\n\t\t\t\t\t'Monthly ,' +\n\t\t\t\t\tgetMonthDetails(marketing.inputs)\n\t\t\t\t\t\t.headings.map((month, id) => month.month)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Headingcount ,' +\n\t\t\t\t\tgetMonthDetails(marketing.inputs)\n\t\t\t\t\t\t.headings.map((year, id) => year.count)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Salaries ,' +\n\t\t\t\t\tObject.values(getMonthDetails(marketing.inputs).salaries)\n\t\t\t\t\t\t.map((salary) => salary)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Taxes ,' +\n\t\t\t\t\tObject.values(getMonthDetails(marketing.inputs).taxes)\n\t\t\t\t\t\t.map((tax) => tax)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Commissions ,' +\n\t\t\t\t\tObject.values(getMonthDetails(marketing.inputs).commissions)\n\t\t\t\t\t\t.map((com) => com)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t\tstr +=\n\t\t\t\t\t'Total Payroll ,' +\n\t\t\t\t\tObject.values(getMonthDetails(marketing.inputs).total)\n\t\t\t\t\t\t.map((tot) => tot)\n\t\t\t\t\t\t.join(',') +\n\t\t\t\t\t',\\n';\n\t\t\t}\n\n\t\t\tconsole.log(str);\n\t\t\tsetCsvData(str);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn userSub && userSub.length > 0 ? (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-12 col-xl-12'>\n\t\t\t\t\t{msg && (\n\t\t\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className='table-container-header'>\n\t\t\t\t\t\t<h4 className=''>Marketing</h4>\n\t\t\t\t\t\t<div className='chart-handle-grup'>\n\t\t\t\t\t\t\t<div className='chart-dropdown'>\n\t\t\t\t\t\t\t\t<span className='mr-3'>View By :</span>\n\t\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.margin}>\n\t\t\t\t\t\t\t\t\t<NativeSelect id='demo-customized-select-native' value={chartValue} onChange={handleChange} input={<BootstrapInput />}>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue='year' value='year'>\n\t\t\t\t\t\t\t\t\t\t\tYear\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t<option value='quarter'>Quarter</option>\n\t\t\t\t\t\t\t\t\t\t<option value='month'>Month</option>\n\t\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ButtonGroup aria-label='Basic example'>\n\t\t\t\t\t\t\t\t<span className='btn-custom-group'>Export</span>\n\t\t\t\t\t\t\t\t<Button onClick={generateCSV} className='btn-custom-group'>\n\t\t\t\t\t\t\t\t\t{marketing && marketing.inputs ? (\n\t\t\t\t\t\t\t\t\t\t<CSVLink className='csv-download-btn' onClick={generateCSV} filename={'data.csv'} data={csvData}>\n\t\t\t\t\t\t\t\t\t\t\tCSV\n\t\t\t\t\t\t\t\t\t\t</CSVLink>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t'CSV'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={generatePdf} className='btn-custom-group'>\n\t\t\t\t\t\t\t\t\tPDF\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='custom-table-container'>\n\t\t\t\t\t\t<table id='marketing-table'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && getYear(marketing.inputs).headings.map((year, id) => <th key={id}>{new Date(year.startDate).getFullYear()}</th>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' && marketing && marketing.inputs && getQuarter(marketing.inputs).headings.map((quarter, id) => <th key={id}>{quarter.quarter}</th>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' && marketing && marketing.inputs && getMonthDetails(marketing.inputs).headings.map((month, id) => <th key={id}>{month.month}</th>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Headcounts</th>\n\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && getYear(marketing.inputs).headings.map((year, id) => <td key={id}>{year.count}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' && marketing && marketing.inputs && marketing.inputs.length > 0 && getQuarter(marketing.inputs).headings.map((quarter, id) => <td key={id}>{quarter.count}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' && marketing && marketing.inputs && getMonthDetails(marketing.inputs).headings.map((month, id) => <td key={id}>{month.count}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Salaries</th>\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && Object.keys(getYear(marketing.inputs).salaries).map((data, id) => <td key={id}>${getYear(marketing.inputs).salaries[data].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetQuarter(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getQuarter(marketing.inputs).salaries).map((quarter, id) => <td key={id}>${getQuarter(marketing.inputs).salaries[quarter].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetMonthDetails(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getMonthDetails(marketing.inputs).salaries).map((month, id) => <td key={id}>${getMonthDetails(marketing.inputs).salaries[month].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Benifits & Taxes</th>\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && Object.keys(getYear(marketing.inputs).taxes).map((data, id) => <td key={id}>${getYear(marketing.inputs).taxes[data].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetQuarter(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getQuarter(marketing.inputs).taxes).map((quarter, id) => <td key={id}>${getQuarter(marketing.inputs).taxes[quarter].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetMonthDetails(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getMonthDetails(marketing.inputs).taxes).map((month, id) => <td key={id}>${getMonthDetails(marketing.inputs).taxes[month].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Commissions</th>\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && Object.keys(getYear(marketing.inputs).commissions).map((data, id) => <td key={id}>${getYear(marketing.inputs).commissions[data].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetQuarter(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getQuarter(marketing.inputs).commissions).map((quarter, id) => <td key={id}>${getQuarter(marketing.inputs).commissions[quarter].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetMonthDetails(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getMonthDetails(marketing.inputs).commissions).map((month, id) => <td key={id}>${getMonthDetails(marketing.inputs).commissions[month].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Total Payroll</th>\n\t\t\t\t\t\t\t\t\t{chartValue === 'year' && marketing && marketing.inputs && Object.keys(getYear(marketing.inputs).total).map((data, id) => <td key={id}>${getYear(marketing.inputs).total[data].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'quarter' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetQuarter(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getQuarter(marketing.inputs).total).map((quarter, id) => <td key={id}>${getQuarter(marketing.inputs).total[quarter].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t\t{chartValue === 'month' &&\n\t\t\t\t\t\t\t\t\t\tmarketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tgetMonthDetails(marketing.inputs) &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getMonthDetails(marketing.inputs).total).map((month, id) => <td key={id}>${getMonthDetails(marketing.inputs).total[month].toFixed(2)}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-8 col-xl-7'>\n\t\t\t\t\t<h4>Marketing Inputs</h4>\n\t\t\t\t\t<MarketingInputs marketing={marketing} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-4 col-xl-5'>\n\t\t\t\t\t<h4>Major Expense Input</h4>\n\t\t\t\t\t{marketing && marketing._id && <ExpenseInputs marketingId={marketing._id} expenseInputs={marketing.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t<strong>Please subscribe our product to use the app</strong>\n\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Marketing;\n","/home/yamin/Downloads/work/serverless-stack-client/src/views/Auth/Confirm/Confirm.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Revenue/ExpenseInputs.js",["154"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/RandD/RandDInputs.js",["155"],"/home/yamin/Downloads/work/serverless-stack-client/src/context/payment-service.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/context/revenue-service.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Marketing/ContractorExpense.js",["156"],"/home/yamin/Downloads/work/serverless-stack-client/src/routes.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/RoundedBars.js",["157","158","159"],"/home/yamin/Downloads/work/serverless-stack-client/src/views/GandA/GandA.js",["160","161"],"/home/yamin/Downloads/work/serverless-stack-client/src/context/fetch-service.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/views/Sales/ExpenseInputs.js",["162"],"/home/yamin/Downloads/work/serverless-stack-client/src/context/subscription-service.js",[],"/home/yamin/Downloads/work/serverless-stack-client/src/context/input-service.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":18},{"ruleId":"169","severity":1,"message":"173","line":26,"column":8,"nodeType":"171","messageId":"172","endLine":26,"endColumn":15},{"ruleId":"169","severity":1,"message":"174","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":13},{"ruleId":"169","severity":1,"message":"175","line":12,"column":12,"nodeType":"171","messageId":"172","endLine":12,"endColumn":16},{"ruleId":"169","severity":1,"message":"176","line":19,"column":9,"nodeType":"171","messageId":"172","endLine":19,"endColumn":15},{"ruleId":"169","severity":1,"message":"177","line":24,"column":9,"nodeType":"171","messageId":"172","endLine":24,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":25,"column":8,"nodeType":"171","messageId":"172","endLine":25,"endColumn":23},{"ruleId":"169","severity":1,"message":"179","line":28,"column":8,"nodeType":"171","messageId":"172","endLine":28,"endColumn":19},{"ruleId":"169","severity":1,"message":"180","line":13,"column":10,"nodeType":"171","messageId":"172","endLine":13,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":16,"column":8,"nodeType":"171","messageId":"172","endLine":16,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":17,"column":8,"nodeType":"171","messageId":"172","endLine":17,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":15},{"ruleId":"169","severity":1,"message":"181","line":55,"column":32,"nodeType":"171","messageId":"172","endLine":55,"endColumn":36},{"ruleId":"169","severity":1,"message":"180","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":15},{"ruleId":"169","severity":1,"message":"180","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":15},{"ruleId":"169","severity":1,"message":"182","line":8,"column":61,"nodeType":"171","messageId":"172","endLine":8,"endColumn":67},{"ruleId":"183","severity":1,"message":"184","line":98,"column":20,"nodeType":"185","messageId":"186","endLine":98,"endColumn":22},{"ruleId":"169","severity":1,"message":"187","line":102,"column":7,"nodeType":"171","messageId":"172","endLine":102,"endColumn":17},{"ruleId":"169","severity":1,"message":"188","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"181","line":56,"column":32,"nodeType":"171","messageId":"172","endLine":56,"endColumn":36},{"ruleId":"169","severity":1,"message":"180","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":15},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],["189"],["190"],"no-unused-vars","'BASE_URL' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'set' is defined but never used.","'user' is assigned a value but never used.","'loader' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'state' is assigned a value but never used.","'data' is assigned a value but never used.","'radius' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'nextCorner' is assigned a value but never used.","'Bar' is defined but never used.","no-global-assign","no-unsafe-negation"]